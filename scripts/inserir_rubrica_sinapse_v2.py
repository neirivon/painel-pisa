from painel_pisa.utils.conexao_mongo import conectar_mongo
from painel_pisa.utils.config import CONFIG
# scriptos.path.join(s, "i")nserir_rubrica_sinapse_v2.py

import json
from datetime import datetime
from pymongo import MongoClient
import pandas as pd
import os

# === Conex√£o com o MongoDB ===
client = conectar_mongo(nome_banco="saeb")[1]
db = client["rubricas"]
colecao = db["sinapse_9ano_todas_v2"]

# === Nova Rubrica SINAPSE com CTC ===
rubrica = [
    {
        "dimensao": "üß† Taxonomia de Bloom (N√≠vel cognitivo esperado)",
        "emergente": "Recordar ou reconhecer informa√ß√µes simples.",
        "inicial": "Compreender significados e interpretar textos ou situa√ß√µes.",
        "essencial": "Aplicar conhecimentos em contextos familiares.",
        "avancado": "Analisar estruturas, rela√ß√µes ou causas.",
        "inovador": "Avaliar e criar solu√ß√µes com autonomia.",
    },
    {
        "dimensao": "üìò Taxonomia SOLO (Profundidade conceitual da habilidade)",
        "emergente": "Pr√©-estrutural ‚Äì N√£o compreende o conceito.",
        "inicial": "Uni-estrutural ‚Äì Um √∫nico aspecto compreendido.",
        "essencial": "Multi-estrutural ‚Äì V√°rios conceitos isolados.",
        "avancado": "Relacional ‚Äì Conecta e sintetiza informa√ß√µes.",
        "inovador": "Abstrato estendido ‚Äì Transfere e generaliza ideias.",
    },
    {
        "dimensao": "üå± Metodologia ativa (Estrat√©gia ativa recomendada)",
        "emergente": "Aula expositiva tradicional, centrada no professor.",
        "inicial": "Leitura orientada com apoio.",
        "essencial": "Problematiza√ß√£o e resolu√ß√£o de desafios contextualizados.",
        "avancado": "Projetos colaborativos ou interdisciplinares.",
        "inovador": "Gamifica√ß√£o com avalia√ß√£o formativa e engajamento cont√≠nuo.",
    },
    {
        "dimensao": "üß† Perfil Neuropsicopedag√≥gico (Estilo de aprendizagem e suporte metacognitivo)",
        "emergente": "Suporte puramente instrucional, sem adapta√ß√£o.",
        "inicial": "Prefer√™ncia auditiva ou verbal pouco explorada.",
        "essencial": "Integra√ß√£o de estilos visuais, l√≥gicos ou afetivos.",
        "avancado": "Apoio metacognitivo expl√≠cito (planejar, monitorar, revisar).",
        "inovador": "Abordagem personalizada com foco no desenvolvimento integral.",
    },
    {
        "dimensao": "‚ôø DUA ‚Äì Desenho Universal para Aprendizagem (Grau de universalidade da pr√°tica pedag√≥gica)",
        "emergente": "Uma √∫nica forma de apresentar conte√∫do.",
        "inicial": "Duas formas, sem engajamento diferenciado.",
        "essencial": "Uso moderado dos 3 princ√≠pios (representa√ß√£o, engajamento, express√£o).",
        "avancado": "Recursos variados e adaptativos com media√ß√£o ativa.",
        "inovador": "Pr√°tica universal, inclusiva, com m√∫ltiplos canais e feedback cont√≠nuo.",
    },
    {
        "dimensao": "üìç CTC - Contextualiza√ß√£o Territorial e Cultural (Pr√°tica pedag√≥gica orientada por dados locais)",
        "emergente": "Aus√™ncia de contextualiza√ß√£o ‚Äì A pr√°tica pedag√≥gica √© totalmente gen√©rica, sem considera√ß√£o pelas caracter√≠sticas culturais, hist√≥ricas, ambientais ou sociais do territ√≥rio. N√£o h√° di√°logo com a realidade local nem envolvimento da comunidade.",
        "inicial": "Contextualiza√ß√£o incipiente ‚Äì H√° reconhecimento inicial do contexto local, mas as atividades s√£o limitadas e pouco significativas. Algumas refer√™ncias ao ambiente pr√≥ximo surgem de forma superficial, sem planejamento intencional.",
        "essencial": "Contextualiza√ß√£o t√©cnica e parcial ‚Äì Atividades adaptadas √†s necessidades gerais do grupo com base em dados b√°sicos sobre o territ√≥rio. Esfor√ßos ainda incipientes para envolver comunidade e diversidade cultural.",
        "avancado": "Pr√°ticas integradas ao territ√≥rio e cultura local ‚Äì Projetos e atividades com base na realidade local, envolvendo hist√≥ria, saberes tradicionais, meio ambiente e participa√ß√£o comunit√°ria.",
        "inovador": "Educa√ß√£o territorialmente responsiva e co-constru√≠da ‚Äì A√ß√£o pedag√≥gica enraizada na realidade local, com dados qualitativos e parcerias comunit√°rias para planejamento e avalia√ß√£o cont√≠nuos.",
    },
]

# Adicionar metadata comum (vers√£o e timestamp)
for item in rubrica:
    item["versao"] = "v2"
    item["timestamp_versao"] = datetime.utcnow().isoformat()
    item["fonte"] = "Elaborado pelos autores. Baseado em: Bloom, Biggs, CAST, Vygotsky, Sobel, Boaventura, DUA e pr√°ticas da Educa√ß√£o Contextualizada. 2025."

# Inserir no MongoDB
colecao.drop()
colecao.insert_many(rubrica)

# === Salvar como JSON (sem o campo _id do MongoDB) ===
rubrica_limpa = [{k: v for k, v in item.items() if k != "_id"} for item in rubrica]

json_path = "dados_processadoos.path.join(s, "b")ncos.path.join(c, "r")ubrica_sinapse_9ano_todas_v2.json"
os.makedirs(os.path.dirname(json_path), exist_ok=True)
with open(json_path, "w", encoding="utf-8") as f:
    json.dump(rubrica_limpa, f, ensure_ascii=False, indent=2)

# === Salvar como CSV ===
csv_path = "dados_processadoos.path.join(s, "b")ncos.path.join(c, "r")ubrica_sinapse_9ano_todas_v2.csv"
pd.DataFrame(rubrica).to_csv(csv_path, index=False)

client.close()

print("‚úÖ Rubrica SINAPSE v2 inserida com sucesso.")
print(f"üìÑ JSON: {json_path}")
print(f"üìÑ CSV:  {csv_path}")
print("üåê MongoDB: rubricas.sinapse_9ano_todas_v2")

