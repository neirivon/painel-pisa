# painel_pisos.path.join(a, "p")ageos.path.join(s, "1")3_Analise_Relatorio_OCDE.py

import streamlit as st
from utils.conexao_mongo import conectar_mongo
import pandas as pd
import plotly.express as px

# === Configura√ß√£o da P√°gina ===
st.set_page_config(page_title="An√°lise Relat√≥rio OCDE - PISA 2000", layout="wide")

# === CSS Global para consist√™ncia visual ===
st.markdown("""
<style>
    html, body, [class*="css"]  {
        font-family: 'Segoe UI', sans-serif;
        font-size: 17px;
    }
    h1, h2, h3, h4, h5, h6 {
        font-weight: 600;
    }
    .metric-container {
        text-align: center;
    }
    .block-container {
        padding-top: 2rem;
        padding-bottom: 2rem;
    }
os.path.join(<, "s")tyle>
""", unsafe_allow_html=True)

# === T√≠tulo ===
st.title("üìä An√°lise Cr√≠tica do Relat√≥rio OCDE - PISA 2000")

# === Conectar ao MongoDB e carregar dados ===
db = conectar_mongo()
colecao = db["pisa_ocde_2000_relatorio"]
docs = list(colecao.find({}, {"_id": 0, "pagina": 1, "texto": 1}))
df = pd.DataFrame(docs).sort_values(by="pagina")

# === M√©tricas ===
st.markdown("### Estat√≠sticas Iniciais do Relat√≥rio")
col1, col2 = st.columns(2)
col1.metric("Total de P√°ginas", df.shape[0])
col2.metric("Idioma", "Ingl√™s (Original OCDE)")

# === Pr√©-an√°lise textual (contagem de palavras por p√°gina) ===
df["tokens"] = df["texto"].apply(lambda x: len(x.split()))
st.markdown("### Distribui√ß√£o de Palavras por P√°gina")
fig = px.histogram(df, x="pagina", y="tokens", nbins=50, labels={"tokens": "N¬∫ de Palavras", "pagina": "P√°gina"})
st.plotly_chart(fig, use_container_width=True)

# === Vis√£o Geral do Conte√∫do ===
st.markdown("---")
st.subheader("üìò Interpreta√ß√£o Preliminar (com base estrutural)")
st.markdown("""
Este painel apresenta uma leitura explorat√≥ria do **Relat√≥rio T√©cnico da OCDE (PISA 2000)**. O conte√∫do est√° armazenado no MongoDB, mantendo o idioma original (ingl√™s), enquanto a an√°lise interpretativa √© feita em portugu√™s.

Com base em futuras an√°lises sem√¢nticas e classifica√ß√µes por Taxonomia de Bloom e rubricas avaliativas, o painel ser√° atualizado com:

- N√≠veis cognitivos identificados por IA (ex: Aplicar, Analisar, Criar)
- √Åreas tem√°ticas (Leitura, Matem√°tica, Ci√™ncias)
- Sugest√µes de pol√≠ticas p√∫blicas com base nos achados

üìå A pr√≥xima etapa envolver√° **classifica√ß√£o de trechos por n√≠vel de complexidade**, perfil educacional, e **visualiza√ß√µes comparativas entre pa√≠ses** ‚Äî alinhado aos princ√≠pios de **avalia√ß√£o formativa** (Bloom, 1956; OCDE, 2001).
""")

# === Exibi√ß√£o opcional das primeiras p√°ginas (apenas explorat√≥rio, n√£o o foco) ===
with st.expander("üîç Ver Primeiras P√°ginas do Relat√≥rio (Ingl√™s)", expanded=False):
    for _, row in df.head(5).iterrows():
        st.markdown(f"**P√°gina {row['pagina']}**")
        st.text_area(label="", value=row["texto"], height=200, key=row['pagina'])

# === Rodap√© ===
st.markdown("---")
st.caption("OCDE (2001). PISA 2000 Technical Report | Relat√≥rio estruturado via SINAPSE 2.0 ‚Äì An√°lise Cr√≠tica com Foco Educacional.")

